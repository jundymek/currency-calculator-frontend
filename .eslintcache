[{"/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/reportWebVitals.ts":"1","/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/App.tsx":"2","/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/components/calculatorForm/CalculatorForm.tsx":"3","/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/components/calculatorForm/currencesSelect/CurrencesSelect.tsx":"4","/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/components/calculatorForm/result/Result.tsx":"5","/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/components/history/History.tsx":"6","/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/components/navigation/Navigation.tsx":"7"},{"size":425,"mtime":1608330734808,"results":"8","hashOfConfig":"9"},{"size":776,"mtime":1608486406237,"results":"10","hashOfConfig":"9"},{"size":3804,"mtime":1608483886048,"results":"11","hashOfConfig":"9"},{"size":751,"mtime":1608483987636,"results":"12","hashOfConfig":"9"},{"size":792,"mtime":1608483634374,"results":"13","hashOfConfig":"9"},{"size":3198,"mtime":1608490176360,"results":"14","hashOfConfig":"9"},{"size":1145,"mtime":1608487435983,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18it7by",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/reportWebVitals.ts",[],"/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/App.tsx",[],"/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/components/calculatorForm/CalculatorForm.tsx",["31","32","33"],"import { Button, MenuItem, Typography, Paper } from \"@material-ui/core\";\nimport { Select, TextField } from \"mui-rff\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-final-form\";\nimport styled from \"styled-components\";\nimport CurrencesSelect from \"./currencesSelect/CurrencesSelect\";\nimport Result from \"./result/Result\";\n\nexport interface Currences {\n  symbol: string;\n  name: string;\n}\n\nexport interface ResultType {\n  price: number;\n  firstCurrency: string;\n  secondCurrency: string;\n  amount: string;\n  result: number;\n  date: string;\n  id: number;\n}\n\nconst StyledForm = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledAmountField = styled(TextField)`\n  && {\n    margin-top: 1rem;\n    @media (min-width: 640px) {\n      margin: 0;\n      max-width: 200px;\n      margin-left: 20px;\n    }\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  && {\n    margin-top: 1rem;\n    align-self: flex-end;\n  }\n`;\n\nconst StyledFormWrapper = styled.div`\n  @media (min-width: 640px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nconst StyledWrapper = styled.div`\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (min-width: 640px) {\n    width: 50%;\n  }\n`;\n\nconst CalculatorForm = React.memo(() => {\n  const [currences, setCurrences] = useState<Currences[]>([]);\n  const [result, setResult] = useState<ResultType | null>(null);\n  const onSubmit = (values: any) => {\n    console.log(values);\n    return fetch(\"http://localhost:3001/calc\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(values),\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        setResult(result);\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  const getCurrences = () => {\n    return fetch(\"http://localhost:3001/currences\").then((res) => res.json());\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getCurrences();\n      setCurrences(\n        data.sort((a: any, b: any) => {\n          return a.symbol > b.symbol ? 1 : b.symbol > a.symbol ? -1 : 0;\n        })\n      );\n    }\n    fetchData();\n  }, []);\n\n  const filteredCurrences = (currences: Currences[], values: any) => {\n    return currences.filter((item) => {\n      return item.symbol !== values.firstCurrency;\n    });\n  };\n\n  return (\n    <StyledWrapper>\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\n        Currency converter\n      </Typography>\n      <Typography variant=\"h5\" align=\"center\" component=\"h2\" gutterBottom>\n        Convert any currency\n      </Typography>\n      <Form\n        onSubmit={onSubmit}\n        render={({ handleSubmit, values }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <StyledFormWrapper>\n              <CurrencesSelect currences={currences} name=\"firstCurrency\" label=\"From currency...\" />\n              <StyledAmountField\n                label=\"Amount\"\n                type=\"number\"\n                name=\"amount\"\n                variant=\"outlined\"\n                color=\"primary\"\n                required\n              />\n            </StyledFormWrapper>\n            <CurrencesSelect\n              currences={filteredCurrences(currences, values)}\n              name=\"secondCurrency\"\n              label=\"To currency...\"\n              disabled={!values.firstCurrency}\n            />\n            <StyledButton variant=\"contained\" color=\"primary\" type=\"submit\">\n              Submit\n            </StyledButton>\n          </StyledForm>\n        )}\n      />\n      {result && <Result result={result} />}\n    </StyledWrapper>\n  );\n});\n\nexport default CalculatorForm;\n","/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/components/calculatorForm/currencesSelect/CurrencesSelect.tsx",[],"/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/components/calculatorForm/result/Result.tsx",[],"/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/components/history/History.tsx",[],"/Users/jundymek/dev/billon-currency-calculator/billon-calc-frontend/src/components/navigation/Navigation.tsx",[],{"ruleId":"34","severity":1,"message":"35","line":1,"column":18,"nodeType":"36","messageId":"37","endLine":1,"endColumn":26},{"ruleId":"34","severity":1,"message":"38","line":1,"column":40,"nodeType":"36","messageId":"37","endLine":1,"endColumn":45},{"ruleId":"34","severity":1,"message":"39","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":16},"@typescript-eslint/no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Select' is defined but never used."]